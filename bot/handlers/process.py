import time

from telegram import Update
from telegram.ext import CallbackContext, ConversationHandler

from config import SPREADSHEET_ID
from bot.states import WAITING_FOR_CATEGORY
from bot.utilities.delete import delete_last_three_messages
from sheets.auth import get_service
from sheets.sheets_manager import delete_last_transaction, write_transaction
from utilities.text_process import find_args
from utilities.reply_manager import format_reply

async def process_data(update: Update, context: CallbackContext) -> int:
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –æ—Ü–µ–Ω–∫–∏ —Å–∫–æ—Ä–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã
    start = time.time()

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –≤—ã–≤–æ–¥–∏–º –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    user_message = update.message.text  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print(user_message)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã
    if user_message.lower() == "—É–¥–∞–ª–∏":
        delete_last_transaction(get_service([0]), SPREADSHEET_ID)
        http_auth = get_service([1])
        http_auth.close()
        await delete_last_three_messages(update, context)
        return ConversationHandler.END

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏–µ —É—Å–ª–æ–≤–∏–π –±–æ—Ç–∞
    if len(user_message.split()) < 2 or not any(char.isdigit() for char in user_message):
        print("–°–æ–æ–±—â–µ–Ω–∏–µ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–æ (–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç).")
        return  # –ü—Ä–æ—Å—Ç–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏

    # –î–µ–ª–∞–µ–º –∞–Ω–∞–ª–∏–∑ –∏ –ø–æ–ª—É—á–∞–µ–º —Å—É–º–º—É, –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ –æ–ø–∏—Å–∞–Ω–∏–µ
    m_sum, m_cat, m_desc = find_args(user_message)

    if m_cat == "- –ù–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–æ–µ":
        await update.message.reply_text(
            f"–•–æ–∑—è–∏–Ω, –Ω–µ –≤–∏–∂—É –∫–∞—Ç–µ–≥–æ—Ä–∏—é, —É—Ç–æ—á–Ω–∏! ü•∫ "
        )
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ context –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
        context.user_data["m_sum"] = m_sum
        context.user_data["m_desc"] = m_desc
        return WAITING_FOR_CATEGORY
    else:
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—É
        write_transaction(m_sum, m_cat, m_desc, get_service([0]))
        http_auth = get_service([1])
        http_auth.close()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        reply_text = format_reply(m_sum, m_cat, m_desc)
        await update.message.reply_text(reply_text, parse_mode="HTML")

        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
        end = time.time()
        elapsed_time = end - start
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {elapsed_time:.2f} —Å–µ–∫—É–Ω–¥")
        return ConversationHandler.END